Thank you!

The address-only search works well and correctly returns existing customers for the address.

However, there are issues with the combined address + photo upload logic:
- When entering the test address (Street: Mengelbergstr., Housenumber: 2, Postal: 51067) and uploading the first test photo (which extracts ["müller meier", "schneider schmidt"]), both names are shown as potential new customers. But "müller meier" should be recognized and marked as an existing customer due to the partial match with "meier" in "Damian Kudla Meier" from the Google Sheet at that address.
- When entering a wrong address and uploading the photo, "Damian Kudla Meier" is still shown as an existing customer, even though the address doesn't match the one in the Google Sheet.
- When uploading the photo without any address, "Damian Kudla Meier" is returned as an existing customer.

This indicates that the address is not being properly checked before name matching. Update the backend logic to:
- First, filter all customers from the Google Sheet that match the provided address (postal code exact, street partial, house flexible).
- Then, perform the name matching only against those filtered customers for the extracted names from the photo.
- Ensure photos are only evaluated in combination with a provided address (disable or error if no address is entered).

Additionally:
- When uploading a photo (with address), add a new section at the bottom of the results: "Alle Bestandskunden an dieser Adresse" (All Existing Customers at this Address), listing all customers found in the Google Sheet for that address.
- For the "Bestandskunden" (Existing Customers) section: Display the names from the photo (Klingelschild), not from the Google Sheet.
- Remove the green and yellow tags/labels next to the names in "Bestandskunden" and "Neue Interessenten" sections that say "Bestandskunde" and "Potentieller Kunde" – this is redundant with the section headers, and they overlap the names in mobile view.
- For long names in the display fields: In mobile view, enable horizontal scrolling within the field to view the full name if it overflows.

There's also an issue with address matching variations: Streets can be written differently, e.g., "Ferdinand-Stücker-Str.", "Ferdinand-Stücker-Straße", "Ferdinand Stücker Str.", etc. To handle this initially, implement a simplified fuzzy matching algorithm in the backend for street comparison:
- Normalize both input street and Google Sheet street: Convert to lowercase, remove special characters like '-', '.', spaces, and common abbreviations (e.g., replace "str." with "strasse", "straße" with "strasse").
- Then, calculate similarity using Levenshtein distance (implement a simple function or use a library like 'leven' if available in Node.js): Compute edit distance, then similarity = (1 - (distance / max_length)) * 100, where max_length is the length of the longer normalized string. Consider a match if similarity >= 95% (i.e., distance <= 0.05 * max_length). For short strings, use a minimum distance threshold like max(1, 0.05 * max_length) to avoid over-sensitivity.
This is a temporary solution; later, we can enhance by normalizing all Google Sheet addresses via Google Maps API and doing the same for user inputs before matching.

Please test these scenarios after updates and confirm fixes. Continue ensuring the page defaults to German with English toggle support, and everything remains on a single page. Let me know the results or if further adjustments are needed!